{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getActionFromState = getActionFromState;\nfunction getActionFromState(state, options) {\n  const normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n  const routes = state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n  if (routes.length === 0) {\n    return undefined;\n  }\n  if (!(routes.length === 1 && routes[0].key === undefined || routes.length === 2 && routes[0].key === undefined && routes[0].name === normalizedConfig?.initialRouteName && routes[1].key === undefined)) {\n    return {\n      type: 'RESET',\n      payload: state\n    };\n  }\n  const route = state.routes[state.index ?? state.routes.length - 1];\n  let current = route?.state;\n  let config = normalizedConfig?.screens?.[route?.name];\n  let params = Object.assign({}, route.params);\n  const payload = route ? {\n    name: route.name,\n    path: route.path,\n    params\n  } : undefined;\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n    const routes = current.index != null ? current.routes.slice(0, current.index + 1) : current.routes;\n    const route = routes[routes.length - 1];\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined\n    });\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (routes.length === 2 && routes[0].key === undefined && routes[0].name === config?.initialRouteName && routes[1].key === undefined) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n    if (route.state) {\n      params.params = Object.assign({}, route.params);\n      params = params.params;\n    } else {\n      params.path = route.path;\n      params.params = route.params;\n    }\n    current = route.state;\n    config = config?.screens?.[route.name];\n  }\n  if (!payload) {\n    return;\n  }\n  return {\n    type: 'NAVIGATE',\n    payload\n  };\n}\nconst createNormalizedConfigItem = config => typeof config === 'object' && config != null ? {\n  initialRouteName: config.initialRouteName,\n  screens: config.screens != null ? createNormalizedConfigs(config.screens) : undefined\n} : {};\nconst createNormalizedConfigs = options => Object.entries(options).reduce((acc, [k, v]) => {\n  acc[k] = createNormalizedConfigItem(v);\n  return acc;\n}, {});","map":{"version":3,"names":["getActionFromState","state","options","normalizedConfig","createNormalizedConfigItem","routes","index","slice","length","undefined","key","name","initialRouteName","type","payload","route","current","config","screens","params","Object","assign","path","initial","screen","createNormalizedConfigs","entries","reduce","acc","k","v"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\@react-navigation\\core\\src\\getActionFromState.tsx"],"sourcesContent":["import type {\r\n  CommonActions,\r\n  NavigationState,\r\n  ParamListBase,\r\n  PartialRoute,\r\n  PartialState,\r\n  Route,\r\n} from '@react-navigation/routers';\r\n\r\nimport type { NavigatorScreenParams, PathConfig, PathConfigMap } from './types';\r\n\r\ntype ConfigItem = {\r\n  initialRouteName?: string;\r\n  screens?: Record<string, ConfigItem>;\r\n};\r\n\r\ntype Options = {\r\n  initialRouteName?: string;\r\n  screens: PathConfigMap<object>;\r\n};\r\n\r\ntype NavigateAction<State extends NavigationState> = {\r\n  type: 'NAVIGATE';\r\n  payload: {\r\n    name: string;\r\n    params?: NavigatorScreenParams<State>;\r\n    path?: string;\r\n  };\r\n};\r\n\r\nexport function getActionFromState(\r\n  state: PartialState<NavigationState>,\r\n  options?: Options\r\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\r\n  // Create a normalized configs object which will be easier to use\r\n  const normalizedConfig = options\r\n    ? createNormalizedConfigItem(options as PathConfig<object> | string)\r\n    : {};\r\n\r\n  const routes =\r\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\r\n\r\n  if (routes.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  if (\r\n    !(\r\n      (routes.length === 1 && routes[0].key === undefined) ||\r\n      (routes.length === 2 &&\r\n        routes[0].key === undefined &&\r\n        routes[0].name === normalizedConfig?.initialRouteName &&\r\n        routes[1].key === undefined)\r\n    )\r\n  ) {\r\n    return {\r\n      type: 'RESET',\r\n      payload: state,\r\n    };\r\n  }\r\n\r\n  const route = state.routes[state.index ?? state.routes.length - 1];\r\n\r\n  let current: PartialState<NavigationState> | undefined = route?.state;\r\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\r\n  let params = { ...route.params } as NavigatorScreenParams<ParamListBase>;\r\n\r\n  const payload = route\r\n    ? { name: route.name, path: route.path, params }\r\n    : undefined;\r\n\r\n  while (current) {\r\n    if (current.routes.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const routes =\r\n      current.index != null\r\n        ? current.routes.slice(0, current.index + 1)\r\n        : current.routes;\r\n\r\n    const route: Route<string> | PartialRoute<Route<string>> =\r\n      routes[routes.length - 1];\r\n\r\n    // Explicitly set to override existing value when merging params\r\n    Object.assign(params, {\r\n      initial: undefined,\r\n      screen: undefined,\r\n      params: undefined,\r\n      state: undefined,\r\n    });\r\n\r\n    if (routes.length === 1 && routes[0].key === undefined) {\r\n      params.initial = true;\r\n      params.screen = route.name;\r\n    } else if (\r\n      routes.length === 2 &&\r\n      routes[0].key === undefined &&\r\n      routes[0].name === config?.initialRouteName &&\r\n      routes[1].key === undefined\r\n    ) {\r\n      params.initial = false;\r\n      params.screen = route.name;\r\n    } else {\r\n      params.state = current;\r\n      break;\r\n    }\r\n\r\n    if (route.state) {\r\n      params.params = { ...route.params };\r\n      params = params.params as NavigatorScreenParams<ParamListBase>;\r\n    } else {\r\n      params.path = route.path;\r\n      params.params = route.params;\r\n    }\r\n\r\n    current = route.state;\r\n    config = config?.screens?.[route.name];\r\n  }\r\n\r\n  if (!payload) {\r\n    return;\r\n  }\r\n\r\n  // Try to construct payload for a `NAVIGATE` action from the state\r\n  // This lets us preserve the navigation state and not lose it\r\n  return {\r\n    type: 'NAVIGATE',\r\n    payload,\r\n  };\r\n}\r\n\r\nconst createNormalizedConfigItem = (config: PathConfig<object> | string) =>\r\n  typeof config === 'object' && config != null\r\n    ? {\r\n        initialRouteName: config.initialRouteName,\r\n        screens:\r\n          config.screens != null\r\n            ? createNormalizedConfigs(config.screens)\r\n            : undefined,\r\n      }\r\n    : {};\r\n\r\nconst createNormalizedConfigs = (options: PathConfigMap<object>) =>\r\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\r\n    acc[k] = createNormalizedConfigItem(v);\r\n    return acc;\r\n  }, {});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}