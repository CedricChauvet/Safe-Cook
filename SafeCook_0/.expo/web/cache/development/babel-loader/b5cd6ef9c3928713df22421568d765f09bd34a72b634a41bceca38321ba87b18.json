{"ast":null,"code":"import invariant from 'invariant';\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\nexport class LegacyEventEmitter {\n  _listenerCount = 0;\n  constructor(nativeModule) {\n    if (nativeModule.__expo_module_name__) {\n      return nativeModule;\n    }\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule);\n  }\n  addListener(eventName, listener) {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      }\n    };\n    return subscription;\n  }\n  removeAllListeners(eventName) {\n    const removedListenerCount = this._eventEmitter.listenerCount ? this._eventEmitter.listenerCount(eventName) : this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(this._listenerCount >= 0, `EventEmitter must have a non-negative number of listeners`);\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n  removeSubscription(subscription) {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n    if ('remove' in nativeEmitterSubscription) {\n      nativeEmitterSubscription.remove();\n    }\n    this._listenerCount--;\n    delete subscription[nativeEmitterSubscriptionKey];\n    subscription.remove = () => {};\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n  emit(eventName, ...params) {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}","map":{"version":3,"names":["invariant","NativeEventEmitter","Platform","nativeEmitterSubscriptionKey","LegacyEventEmitter","_listenerCount","constructor","nativeModule","__expo_module_name__","_nativeModule","_eventEmitter","addListener","eventName","listener","OS","startObserving","nativeEmitterSubscription","subscription","remove","removeSubscription","removeAllListeners","removedListenerCount","listenerCount","listeners","length","stopObserving","emit","params"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/expo-modules-core/src/LegacyEventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\r\nimport { NativeEventEmitter, Platform } from 'react-native';\r\n\r\nimport { EventSubscription } from './EventEmitter';\r\n\r\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\r\n\r\ntype NativeModule = {\r\n  __expo_module_name__?: string;\r\n  startObserving?: () => void;\r\n  stopObserving?: () => void;\r\n\r\n  // Erase these types as they would conflict with the new NativeModule type.\r\n  // This EventEmitter is deprecated anyway.\r\n  addListener?: any;\r\n  removeListeners?: any;\r\n};\r\n\r\n/**\r\n * @deprecated Deprecated in favor of `EventEmitter`.\r\n */\r\nexport class LegacyEventEmitter {\r\n  _listenerCount = 0;\r\n\r\n  // @ts-expect-error\r\n  _nativeModule: NativeModule;\r\n\r\n  // @ts-expect-error\r\n  _eventEmitter: NativeEventEmitter;\r\n\r\n  constructor(nativeModule: NativeModule) {\r\n    // If the native module is a new module, just return it back as it's already an event emitter.\r\n    // This is for backwards compatibility until we stop using this legacy class in other packages.\r\n    if (nativeModule.__expo_module_name__) {\r\n      // @ts-expect-error\r\n      return nativeModule;\r\n    }\r\n    this._nativeModule = nativeModule;\r\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\r\n  }\r\n\r\n  addListener<T>(eventName: string, listener: (event: T) => void): EventSubscription {\r\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\r\n      this._nativeModule.startObserving();\r\n    }\r\n\r\n    this._listenerCount++;\r\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\r\n    const subscription = {\r\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\r\n      remove: () => {\r\n        this.removeSubscription(subscription);\r\n      },\r\n    };\r\n    return subscription;\r\n  }\r\n\r\n  removeAllListeners(eventName: string): void {\r\n    // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\r\n    const removedListenerCount = this._eventEmitter.listenerCount\r\n      ? // @ts-ignore: this is available since 0.64\r\n        this._eventEmitter.listenerCount(eventName)\r\n      : // @ts-ignore: this is available in older versions\r\n        this._eventEmitter.listeners(eventName).length;\r\n    this._eventEmitter.removeAllListeners(eventName);\r\n    this._listenerCount -= removedListenerCount;\r\n    invariant(\r\n      this._listenerCount >= 0,\r\n      `EventEmitter must have a non-negative number of listeners`\r\n    );\r\n\r\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\r\n      this._nativeModule.stopObserving();\r\n    }\r\n  }\r\n\r\n  removeSubscription(subscription: EventSubscription): void {\r\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\r\n    if (!nativeEmitterSubscription) {\r\n      return;\r\n    }\r\n\r\n    if ('remove' in nativeEmitterSubscription) {\r\n      nativeEmitterSubscription.remove();\r\n    }\r\n    this._listenerCount--;\r\n\r\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\r\n    // called again with the same subscription\r\n    delete subscription[nativeEmitterSubscriptionKey];\r\n\r\n    // Release closed-over references to the emitter\r\n    subscription.remove = () => {};\r\n\r\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\r\n      this._nativeModule.stopObserving();\r\n    }\r\n  }\r\n\r\n  emit(eventName: string, ...params: any[]): void {\r\n    this._eventEmitter.emit(eventName, ...params);\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,WAAW;AAAC,OAAAC,kBAAA;AAAA,OAAAC,QAAA;AAKlC,MAAMC,4BAA4B,GAAG,+BAA+B;AAgBpE,OAAO,MAAMC,kBAAkB,CAAC;EAC9BC,cAAc,GAAG,CAAC;EAQlBC,WAAWA,CAACC,YAA0B,EAAE;IAGtC,IAAIA,YAAY,CAACC,oBAAoB,EAAE;MAErC,OAAOD,YAAY;IACrB;IACA,IAAI,CAACE,aAAa,GAAGF,YAAY;IACjC,IAAI,CAACG,aAAa,GAAG,IAAIT,kBAAkB,CAACM,YAAmB,CAAC;EAClE;EAEAI,WAAWA,CAAIC,SAAiB,EAAEC,QAA4B,EAAqB;IACjF,IAAI,CAAC,IAAI,CAACR,cAAc,IAAIH,QAAQ,CAACY,EAAE,KAAK,KAAK,IAAI,IAAI,CAACL,aAAa,CAACM,cAAc,EAAE;MACtF,IAAI,CAACN,aAAa,CAACM,cAAc,CAAC,CAAC;IACrC;IAEA,IAAI,CAACV,cAAc,EAAE;IACrB,MAAMW,yBAAyB,GAAG,IAAI,CAACN,aAAa,CAACC,WAAW,CAACC,SAAS,EAAEC,QAAQ,CAAC;IACrF,MAAMI,YAAY,GAAG;MACnB,CAACd,4BAA4B,GAAGa,yBAAyB;MACzDE,MAAM,EAAEA,CAAA,KAAM;QACZ,IAAI,CAACC,kBAAkB,CAACF,YAAY,CAAC;MACvC;IACF,CAAC;IACD,OAAOA,YAAY;EACrB;EAEAG,kBAAkBA,CAACR,SAAiB,EAAQ;IAE1C,MAAMS,oBAAoB,GAAG,IAAI,CAACX,aAAa,CAACY,aAAa,GAEzD,IAAI,CAACZ,aAAa,CAACY,aAAa,CAACV,SAAS,CAAC,GAE3C,IAAI,CAACF,aAAa,CAACa,SAAS,CAACX,SAAS,CAAC,CAACY,MAAM;IAClD,IAAI,CAACd,aAAa,CAACU,kBAAkB,CAACR,SAAS,CAAC;IAChD,IAAI,CAACP,cAAc,IAAIgB,oBAAoB;IAC3CrB,SAAS,CACP,IAAI,CAACK,cAAc,IAAI,CAAC,EACxB,2DACF,CAAC;IAED,IAAI,CAAC,IAAI,CAACA,cAAc,IAAIH,QAAQ,CAACY,EAAE,KAAK,KAAK,IAAI,IAAI,CAACL,aAAa,CAACgB,aAAa,EAAE;MACrF,IAAI,CAAChB,aAAa,CAACgB,aAAa,CAAC,CAAC;IACpC;EACF;EAEAN,kBAAkBA,CAACF,YAA+B,EAAQ;IACxD,MAAMD,yBAAyB,GAAGC,YAAY,CAACd,4BAA4B,CAAC;IAC5E,IAAI,CAACa,yBAAyB,EAAE;MAC9B;IACF;IAEA,IAAI,QAAQ,IAAIA,yBAAyB,EAAE;MACzCA,yBAAyB,CAACE,MAAM,CAAC,CAAC;IACpC;IACA,IAAI,CAACb,cAAc,EAAE;IAIrB,OAAOY,YAAY,CAACd,4BAA4B,CAAC;IAGjDc,YAAY,CAACC,MAAM,GAAG,MAAM,CAAC,CAAC;IAE9B,IAAI,CAAC,IAAI,CAACb,cAAc,IAAIH,QAAQ,CAACY,EAAE,KAAK,KAAK,IAAI,IAAI,CAACL,aAAa,CAACgB,aAAa,EAAE;MACrF,IAAI,CAAChB,aAAa,CAACgB,aAAa,CAAC,CAAC;IACpC;EACF;EAEAC,IAAIA,CAACd,SAAiB,EAAE,GAAGe,MAAa,EAAQ;IAC9C,IAAI,CAACjB,aAAa,CAACgB,IAAI,CAACd,SAAS,EAAE,GAAGe,MAAM,CAAC;EAC/C;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}