{"ast":null,"code":"export async function fetchAsync(url) {\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'expo-platform': 'web'\n    }\n  });\n  return {\n    body: await response.text(),\n    status: response.status,\n    headers: response.headers\n  };\n}","map":{"version":3,"names":["fetchAsync","url","response","fetch","method","headers","body","text","status"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/@expo/metro-runtime/src/async-require/fetchAsync.ts"],"sourcesContent":["/**\r\n * Copyright Â© 2022 650 Industries.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport async function fetchAsync(\r\n  url: string\r\n): Promise<{ body: string; status: number; headers: Headers }> {\r\n  const response = await fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      // No real reason for this but we try to use this format for everything.\r\n      'expo-platform': 'web',\r\n    },\r\n  });\r\n  return {\r\n    body: await response.text(),\r\n    status: response.status,\r\n    headers: response.headers,\r\n  };\r\n}\r\n"],"mappings":"AAMA,OAAO,eAAeA,UAAUA,CAC9BC,GAAW,EACkD;EAC7D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAChCG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAEP,eAAe,EAAE;IACnB;EACF,CAAC,CAAC;EACF,OAAO;IACLC,IAAI,EAAE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC3BC,MAAM,EAAEN,QAAQ,CAACM,MAAM;IACvBH,OAAO,EAAEH,QAAQ,CAACG;EACpB,CAAC;AACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}