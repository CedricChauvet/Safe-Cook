{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NOT_INITIALIZED_ERROR = void 0;\nexports.createNavigationContainerRef = createNavigationContainerRef;\nvar _routers = require(\"@react-navigation/routers\");\nconst NOT_INITIALIZED_ERROR = exports.NOT_INITIALIZED_ERROR = \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\nfunction createNavigationContainerRef() {\n  const methods = [...Object.keys(_routers.CommonActions), 'addListener', 'removeListener', 'resetRoot', 'dispatch', 'isFocused', 'canGoBack', 'getRootState', 'getState', 'getParent', 'getCurrentRoute', 'getCurrentOptions'];\n  const listeners = {};\n  const removeListener = (event, callback) => {\n    if (listeners[event]) {\n      listeners[event] = listeners[event].filter(cb => cb !== callback);\n    }\n  };\n  let current = null;\n  const ref = Object.assign({\n    get current() {\n      return current;\n    },\n    set current(value) {\n      current = value;\n      if (value != null) {\n        Object.entries(listeners).forEach(([event, callbacks]) => {\n          callbacks.forEach(callback => {\n            value.addListener(event, callback);\n          });\n        });\n      }\n    },\n    isReady: () => {\n      if (current == null) {\n        return false;\n      }\n      return current.isReady();\n    }\n  }, methods.reduce((acc, name) => {\n    acc[name] = (...args) => {\n      if (current == null) {\n        switch (name) {\n          case 'addListener':\n            {\n              const [event, callback] = args;\n              listeners[event] = listeners[event] || [];\n              listeners[event].push(callback);\n              return () => removeListener(event, callback);\n            }\n          case 'removeListener':\n            {\n              const [event, callback] = args;\n              removeListener(event, callback);\n              break;\n            }\n          default:\n            console.error(NOT_INITIALIZED_ERROR);\n        }\n      } else {\n        return current[name](...args);\n      }\n    };\n    return acc;\n  }, {}));\n  return ref;\n}","map":{"version":3,"names":["_routers","require","NOT_INITIALIZED_ERROR","exports","createNavigationContainerRef","methods","Object","keys","CommonActions","listeners","removeListener","event","callback","filter","cb","current","ref","assign","value","entries","forEach","callbacks","addListener","isReady","reduce","acc","name","args","push","console","error"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\@react-navigation\\core\\src\\createNavigationContainerRef.tsx"],"sourcesContent":["import { CommonActions } from '@react-navigation/routers';\r\n\r\nimport type {\r\n  NavigationContainerEventMap,\r\n  NavigationContainerRef,\r\n  NavigationContainerRefWithCurrent,\r\n} from './types';\r\n\r\nexport const NOT_INITIALIZED_ERROR =\r\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\r\n\r\nexport function createNavigationContainerRef<\r\n  ParamList extends {} = ReactNavigation.RootParamList,\r\n>(): NavigationContainerRefWithCurrent<ParamList> {\r\n  const methods = [\r\n    ...Object.keys(CommonActions),\r\n    'addListener',\r\n    'removeListener',\r\n    'resetRoot',\r\n    'dispatch',\r\n    'isFocused',\r\n    'canGoBack',\r\n    'getRootState',\r\n    'getState',\r\n    'getParent',\r\n    'getCurrentRoute',\r\n    'getCurrentOptions',\r\n  ] as const;\r\n\r\n  const listeners: Record<string, ((...args: any[]) => void)[]> = {};\r\n\r\n  const removeListener = (\r\n    event: string,\r\n    callback: (...args: any[]) => void\r\n  ) => {\r\n    if (listeners[event]) {\r\n      listeners[event] = listeners[event].filter((cb) => cb !== callback);\r\n    }\r\n  };\r\n\r\n  let current: NavigationContainerRef<ParamList> | null = null;\r\n\r\n  const ref: NavigationContainerRefWithCurrent<ParamList> = {\r\n    get current() {\r\n      return current;\r\n    },\r\n    set current(value: NavigationContainerRef<ParamList> | null) {\r\n      current = value;\r\n\r\n      if (value != null) {\r\n        Object.entries(listeners).forEach(([event, callbacks]) => {\r\n          callbacks.forEach((callback) => {\r\n            value.addListener(\r\n              event as keyof NavigationContainerEventMap,\r\n              callback\r\n            );\r\n          });\r\n        });\r\n      }\r\n    },\r\n    isReady: () => {\r\n      if (current == null) {\r\n        return false;\r\n      }\r\n\r\n      return current.isReady();\r\n    },\r\n    ...methods.reduce<any>((acc, name) => {\r\n      acc[name] = (...args: any[]) => {\r\n        if (current == null) {\r\n          switch (name) {\r\n            case 'addListener': {\r\n              const [event, callback] = args;\r\n\r\n              listeners[event] = listeners[event] || [];\r\n              listeners[event].push(callback);\r\n\r\n              return () => removeListener(event, callback);\r\n            }\r\n            case 'removeListener': {\r\n              const [event, callback] = args;\r\n\r\n              removeListener(event, callback);\r\n              break;\r\n            }\r\n            default:\r\n              console.error(NOT_INITIALIZED_ERROR);\r\n          }\r\n        } else {\r\n          // @ts-expect-error: this is ok\r\n          return current[name](...args);\r\n        }\r\n      };\r\n      return acc;\r\n    }, {}),\r\n  };\r\n\r\n  return ref;\r\n}\r\n"],"mappings":";;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AAQO,MAAMC,qBAAqB,GAAAC,OAAA,CAAAD,qBAAA,GAChC,+QAA+Q;AAE1Q,SAASE,4BAA4BA,CAAA,EAEM;EAChD,MAAMC,OAAO,GAAG,CACd,GAAGC,MAAM,CAACC,IAAI,CAACP,QAAA,CAAAQ,aAAa,CAAC,EAC7B,aAAa,EACb,gBAAgB,EAChB,WAAW,EACX,UAAU,EACV,WAAW,EACX,WAAW,EACX,cAAc,EACd,UAAU,EACV,WAAW,EACX,iBAAiB,EACjB,mBAAmB,CACX;EAEV,MAAMC,SAAuD,GAAG,CAAC,CAAC;EAElE,MAAMC,cAAc,GAAGA,CACrBC,KAAa,EACbC,QAAkC,KAC/B;IACH,IAAIH,SAAS,CAACE,KAAK,CAAC,EAAE;MACpBF,SAAS,CAACE,KAAK,CAAC,GAAGF,SAAS,CAACE,KAAK,CAAC,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKF,QAAQ,CAAC;IACrE;EACF,CAAC;EAED,IAAIG,OAAiD,GAAG,IAAI;EAE5D,MAAMC,GAAiD,GAAAV,MAAA,CAAAW,MAAA;IACrD,IAAIF,OAAOA,CAAA,EAAG;MACZ,OAAOA,OAAO;IAChB,CAAC;IACD,IAAIA,OAAOA,CAACG,KAA+C,EAAE;MAC3DH,OAAO,GAAGG,KAAK;MAEf,IAAIA,KAAK,IAAI,IAAI,EAAE;QACjBZ,MAAM,CAACa,OAAO,CAACV,SAAS,CAAC,CAACW,OAAO,CAAC,CAAC,CAACT,KAAK,EAAEU,SAAS,CAAC,KAAK;UACxDA,SAAS,CAACD,OAAO,CAAER,QAAQ,IAAK;YAC9BM,KAAK,CAACI,WAAW,CACfX,KAAK,EACLC,QACF,CAAC;UACH,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IACF,CAAC;IACDW,OAAO,EAAEA,CAAA,KAAM;MACb,IAAIR,OAAO,IAAI,IAAI,EAAE;QACnB,OAAO,KAAK;MACd;MAEA,OAAOA,OAAO,CAACQ,OAAO,CAAC,CAAC;IAC1B;EAAC,GACElB,OAAO,CAACmB,MAAM,CAAM,CAACC,GAAG,EAAEC,IAAI,KAAK;IACpCD,GAAG,CAACC,IAAI,CAAC,GAAG,CAAC,GAAGC,IAAW,KAAK;MAC9B,IAAIZ,OAAO,IAAI,IAAI,EAAE;QACnB,QAAQW,IAAI;UACV,KAAK,aAAa;YAAE;cAClB,MAAM,CAACf,KAAK,EAAEC,QAAQ,CAAC,GAAGe,IAAI;cAE9BlB,SAAS,CAACE,KAAK,CAAC,GAAGF,SAAS,CAACE,KAAK,CAAC,IAAI,EAAE;cACzCF,SAAS,CAACE,KAAK,CAAC,CAACiB,IAAI,CAAChB,QAAQ,CAAC;cAE/B,OAAO,MAAMF,cAAc,CAACC,KAAK,EAAEC,QAAQ,CAAC;YAC9C;UACA,KAAK,gBAAgB;YAAE;cACrB,MAAM,CAACD,KAAK,EAAEC,QAAQ,CAAC,GAAGe,IAAI;cAE9BjB,cAAc,CAACC,KAAK,EAAEC,QAAQ,CAAC;cAC/B;YACF;UACA;YACEiB,OAAO,CAACC,KAAK,CAAC5B,qBAAqB,CAAC;QACxC;MACF,CAAC,MAAM;QAEL,OAAOa,OAAO,CAACW,IAAI,CAAC,CAAC,GAAGC,IAAI,CAAC;MAC/B;IACF,CAAC;IACD,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,EACN;EAED,OAAOT,GAAG;AACZ","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}