{"ast":null,"code":"export let PermissionStatus = function (PermissionStatus) {\n  PermissionStatus[\"GRANTED\"] = \"granted\";\n  PermissionStatus[\"UNDETERMINED\"] = \"undetermined\";\n  PermissionStatus[\"DENIED\"] = \"denied\";\n  return PermissionStatus;\n}({});","map":{"version":3,"names":["PermissionStatus"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/expo-modules-core/src/PermissionsInterface.ts"],"sourcesContent":["export enum PermissionStatus {\r\n  /**\r\n   * User has granted the permission.\r\n   */\r\n  GRANTED = 'granted',\r\n  /**\r\n   * User hasn't granted or denied the permission yet.\r\n   */\r\n  UNDETERMINED = 'undetermined',\r\n  /**\r\n   * User has denied the permission.\r\n   */\r\n  DENIED = 'denied',\r\n}\r\n\r\n/**\r\n * Permission expiration time. Currently, all permissions are granted permanently.\r\n */\r\nexport type PermissionExpiration = 'never' | number;\r\n\r\n/**\r\n * An object obtained by permissions get and request functions.\r\n */\r\nexport interface PermissionResponse {\r\n  /**\r\n   * Determines the status of the permission.\r\n   */\r\n  status: PermissionStatus;\r\n  /**\r\n   * Determines time when the permission expires.\r\n   */\r\n  expires: PermissionExpiration;\r\n  /**\r\n   * A convenience boolean that indicates if the permission is granted.\r\n   */\r\n  granted: boolean;\r\n  /**\r\n   * Indicates if user can be asked again for specific permission.\r\n   * If not, one should be directed to the Settings app\r\n   * in order to enable/disable the permission.\r\n   */\r\n  canAskAgain: boolean;\r\n}\r\n"],"mappings":"AAAA,WAAYA,gBAAgB,aAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}