{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"state\", \"screen\", \"params\", \"initial\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SceneView = SceneView;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _EnsureSingleNavigator = require(\"./EnsureSingleNavigator.js\");\nvar _NavigationStateContext = require(\"./NavigationStateContext.js\");\nvar _StaticContainer = require(\"./StaticContainer.js\");\nvar _useOptionsGetters = require(\"./useOptionsGetters.js\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction SceneView({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n  clearOptions\n}) {\n  const navigatorKeyRef = React.useRef();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const {\n    addOptionsGetter\n  } = (0, _useOptionsGetters.useOptionsGetters)({\n    key: route.key,\n    options,\n    navigation\n  });\n  const setKey = React.useCallback(key => {\n    navigatorKeyRef.current = key;\n  }, []);\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find(r => r.key === route.key);\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  const setCurrentState = React.useCallback(child => {\n    const state = getState();\n    setState(Object.assign({}, state, {\n      routes: state.routes.map(r => {\n        if (r.key !== route.key) {\n          return r;\n        }\n        const nextRoute = Object.assign({}, r, {\n          state: child\n        });\n        if (nextRoute.params && ('state' in nextRoute.params && typeof nextRoute.params.state === 'object' && nextRoute.params.state !== null || 'screen' in nextRoute.params && typeof nextRoute.params.screen === 'string')) {\n          const _nextRoute$params = nextRoute.params,\n            rest = _objectWithoutPropertiesLoose(_nextRoute$params, _excluded);\n          if (Object.keys(rest).length) {\n            nextRoute.params = rest;\n          } else {\n            delete nextRoute.params;\n          }\n        }\n        return nextRoute;\n      })\n    }));\n  }, [getState, route.key, setState]);\n  const isInitialRef = React.useRef(true);\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n  React.useEffect(() => {\n    return clearOptions;\n  }, []);\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n  const context = React.useMemo(() => ({\n    state: routeState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    getKey,\n    setKey,\n    getIsInitial,\n    addOptionsGetter\n  }), [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  const ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return (0, _jsxRuntime.jsx)(_NavigationStateContext.NavigationStateContext.Provider, {\n    value: context,\n    children: (0, _jsxRuntime.jsx)(_EnsureSingleNavigator.EnsureSingleNavigator, {\n      children: (0, _jsxRuntime.jsx)(_StaticContainer.StaticContainer, {\n        name: screen.name,\n        render: ScreenComponent || screen.children,\n        navigation: navigation,\n        route: route,\n        children: ScreenComponent !== undefined ? (0, _jsxRuntime.jsx)(ScreenComponent, {\n          navigation: navigation,\n          route: route\n        }) : screen.children !== undefined ? screen.children({\n          navigation,\n          route\n        }) : null\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_EnsureSingleNavigator","_NavigationStateContext","_StaticContainer","_useOptionsGetters","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","SceneView","screen","route","navigation","routeState","getState","setState","options","clearOptions","navigatorKeyRef","useRef","getKey","useCallback","current","addOptionsGetter","useOptionsGetters","key","setKey","getCurrentState","state","currentRoute","routes","find","undefined","setCurrentState","child","assign","map","nextRoute","params","_nextRoute$params","rest","_objectWithoutPropertiesLoose","_excluded","keys","length","isInitialRef","useEffect","getIsInitial","context","useMemo","ScreenComponent","getComponent","component","jsx","NavigationStateContext","Provider","value","children","EnsureSingleNavigator","StaticContainer","name","render"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\@react-navigation\\core\\src\\SceneView.tsx"],"sourcesContent":["import type {\r\n  NavigationState,\r\n  ParamListBase,\r\n  PartialState,\r\n  Route,\r\n} from '@react-navigation/routers';\r\nimport * as React from 'react';\r\n\r\nimport { EnsureSingleNavigator } from './EnsureSingleNavigator';\r\nimport { NavigationStateContext } from './NavigationStateContext';\r\nimport { StaticContainer } from './StaticContainer';\r\nimport type { NavigationProp, RouteConfigComponent } from './types';\r\nimport { useOptionsGetters } from './useOptionsGetters';\r\n\r\ntype Props<State extends NavigationState, ScreenOptions extends {}> = {\r\n  screen: RouteConfigComponent<ParamListBase, string> & { name: string };\r\n  navigation: NavigationProp<\r\n    ParamListBase,\r\n    string,\r\n    string | undefined,\r\n    State,\r\n    ScreenOptions\r\n  >;\r\n  route: Route<string>;\r\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\r\n  getState: () => State;\r\n  setState: (state: State) => void;\r\n  options: object;\r\n  clearOptions: () => void;\r\n};\r\n\r\n/**\r\n * Component which takes care of rendering the screen for a route.\r\n * It provides all required contexts and applies optimizations when applicable.\r\n */\r\nexport function SceneView<\r\n  State extends NavigationState,\r\n  ScreenOptions extends {},\r\n>({\r\n  screen,\r\n  route,\r\n  navigation,\r\n  routeState,\r\n  getState,\r\n  setState,\r\n  options,\r\n  clearOptions,\r\n}: Props<State, ScreenOptions>) {\r\n  const navigatorKeyRef = React.useRef<string | undefined>();\r\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\r\n\r\n  const { addOptionsGetter } = useOptionsGetters({\r\n    key: route.key,\r\n    options,\r\n    navigation,\r\n  });\r\n\r\n  const setKey = React.useCallback((key: string) => {\r\n    navigatorKeyRef.current = key;\r\n  }, []);\r\n\r\n  const getCurrentState = React.useCallback(() => {\r\n    const state = getState();\r\n    const currentRoute = state.routes.find((r) => r.key === route.key);\r\n\r\n    return currentRoute ? currentRoute.state : undefined;\r\n  }, [getState, route.key]);\r\n\r\n  const setCurrentState = React.useCallback(\r\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\r\n      const state = getState();\r\n\r\n      setState({\r\n        ...state,\r\n        routes: state.routes.map((r) => {\r\n          if (r.key !== route.key) {\r\n            return r;\r\n          }\r\n\r\n          const nextRoute = { ...r, state: child };\r\n\r\n          // Before updating the state, cleanup any nested screen and state\r\n          // This will avoid the navigator trying to handle them again\r\n          if (\r\n            nextRoute.params &&\r\n            (('state' in nextRoute.params &&\r\n              typeof nextRoute.params.state === 'object' &&\r\n              nextRoute.params.state !== null) ||\r\n              ('screen' in nextRoute.params &&\r\n                typeof nextRoute.params.screen === 'string'))\r\n          ) {\r\n            // @ts-expect-error: we don't have correct type for params\r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            const { state, screen, params, initial, ...rest } =\r\n              nextRoute.params;\r\n\r\n            if (Object.keys(rest).length) {\r\n              nextRoute.params = rest;\r\n            } else {\r\n              delete nextRoute.params;\r\n            }\r\n          }\r\n\r\n          return nextRoute;\r\n        }),\r\n      });\r\n    },\r\n    [getState, route.key, setState]\r\n  );\r\n\r\n  const isInitialRef = React.useRef(true);\r\n\r\n  React.useEffect(() => {\r\n    isInitialRef.current = false;\r\n  });\r\n\r\n  // Clear options set by this screen when it is unmounted\r\n  React.useEffect(() => {\r\n    return clearOptions;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\r\n\r\n  const context = React.useMemo(\r\n    () => ({\r\n      state: routeState,\r\n      getState: getCurrentState,\r\n      setState: setCurrentState,\r\n      getKey,\r\n      setKey,\r\n      getIsInitial,\r\n      addOptionsGetter,\r\n    }),\r\n    [\r\n      routeState,\r\n      getCurrentState,\r\n      setCurrentState,\r\n      getKey,\r\n      setKey,\r\n      getIsInitial,\r\n      addOptionsGetter,\r\n    ]\r\n  );\r\n\r\n  const ScreenComponent = screen.getComponent\r\n    ? screen.getComponent()\r\n    : screen.component;\r\n\r\n  return (\r\n    <NavigationStateContext.Provider value={context}>\r\n      <EnsureSingleNavigator>\r\n        <StaticContainer\r\n          name={screen.name}\r\n          render={ScreenComponent || screen.children}\r\n          navigation={navigation}\r\n          route={route}\r\n        >\r\n          {ScreenComponent !== undefined ? (\r\n            <ScreenComponent navigation={navigation} route={route} />\r\n          ) : screen.children !== undefined ? (\r\n            screen.children({ navigation, route })\r\n          ) : null}\r\n        </StaticContainer>\r\n      </EnsureSingleNavigator>\r\n    </NavigationStateContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}