{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"headerConfig\", \"activityState\", \"stackPresentation\", \"contentStyle\", \"style\", \"screenId\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport warnOnce from 'warn-once';\nimport DebugContainer from './DebugContainer';\nimport { ScreenStackHeaderConfig } from './ScreenStackHeaderConfig';\nimport Screen from './Screen';\nimport ScreenStack from './ScreenStack';\nimport { RNSScreensRefContext } from '../contexts';\nfunction ScreenStackItem(_ref, ref) {\n  let {\n      children,\n      headerConfig,\n      activityState,\n      stackPresentation,\n      contentStyle,\n      style,\n      screenId\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const currentScreenRef = React.useRef(null);\n  const screenRefs = React.useContext(RNSScreensRefContext);\n  React.useImperativeHandle(ref, () => currentScreenRef.current);\n  const isHeaderInModal = Platform.OS === 'android' ? false : stackPresentation !== 'push' && headerConfig?.hidden === false;\n  const headerHiddenPreviousRef = React.useRef(headerConfig?.hidden);\n  React.useEffect(() => {\n    warnOnce(Platform.OS !== 'android' && stackPresentation !== 'push' && headerHiddenPreviousRef.current !== headerConfig?.hidden, `Dynamically changing header's visibility in modals will result in remounting the screen and losing all local state.`);\n    headerHiddenPreviousRef.current = headerConfig?.hidden;\n  }, [headerConfig?.hidden, stackPresentation]);\n  const content = React.createElement(React.Fragment, null, React.createElement(DebugContainer, {\n    style: [stackPresentation === 'formSheet' ? Platform.OS === 'ios' ? styles.absolute : null : styles.container, contentStyle],\n    stackPresentation: stackPresentation ?? 'push'\n  }, children), React.createElement(ScreenStackHeaderConfig, headerConfig));\n  let internalScreenStyle;\n  if (stackPresentation === 'formSheet' && contentStyle) {\n    const flattenContentStyles = StyleSheet.flatten(contentStyle);\n    internalScreenStyle = {\n      backgroundColor: flattenContentStyles?.backgroundColor\n    };\n  }\n  return React.createElement(Screen, _extends({\n    ref: node => {\n      currentScreenRef.current = node;\n      if (screenRefs === null) {\n        console.warn('Looks like RNSScreensRefContext is missing. Make sure the ScreenStack component is wrapped in it');\n        return;\n      }\n      const currentRefs = screenRefs.current;\n      if (node === null) {\n        delete currentRefs[screenId];\n      } else {\n        currentRefs[screenId] = {\n          current: node\n        };\n      }\n    },\n    enabled: true,\n    isNativeStack: true,\n    activityState: activityState,\n    stackPresentation: stackPresentation,\n    hasLargeHeader: headerConfig?.largeTitle ?? false,\n    style: [style, internalScreenStyle]\n  }, rest), isHeaderInModal ? React.createElement(ScreenStack, {\n    style: styles.container\n  }, React.createElement(Screen, {\n    enabled: true,\n    isNativeStack: true,\n    activityState: activityState,\n    hasLargeHeader: headerConfig?.largeTitle ?? false,\n    style: StyleSheet.absoluteFill\n  }, content)) : content);\n}\nexport default React.forwardRef(ScreenStackItem);\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    start: 0,\n    end: 0\n  }\n});","map":{"version":3,"names":["React","Platform","StyleSheet","warnOnce","DebugContainer","ScreenStackHeaderConfig","Screen","ScreenStack","RNSScreensRefContext","ScreenStackItem","_ref","ref","children","headerConfig","activityState","stackPresentation","contentStyle","style","screenId","rest","_objectWithoutPropertiesLoose","_excluded","currentScreenRef","useRef","screenRefs","useContext","useImperativeHandle","current","isHeaderInModal","OS","hidden","headerHiddenPreviousRef","useEffect","content","createElement","Fragment","styles","absolute","container","internalScreenStyle","flattenContentStyles","flatten","backgroundColor","_extends","node","console","warn","currentRefs","enabled","isNativeStack","hasLargeHeader","largeTitle","absoluteFill","forwardRef","create","flex","position","top","start","end"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\react-native-screens\\src\\components\\ScreenStackItem.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Platform,\r\n  type StyleProp,\r\n  StyleSheet,\r\n  type ViewStyle,\r\n  View,\r\n} from 'react-native';\r\nimport warnOnce from 'warn-once';\r\n\r\nimport DebugContainer from './DebugContainer';\r\nimport { ScreenProps, ScreenStackHeaderConfigProps } from '../types';\r\nimport { ScreenStackHeaderConfig } from './ScreenStackHeaderConfig';\r\nimport Screen from './Screen';\r\nimport ScreenStack from './ScreenStack';\r\nimport { RNSScreensRefContext } from '../contexts';\r\n\r\ntype Props = Omit<\r\n  ScreenProps,\r\n  'enabled' | 'isNativeStack' | 'hasLargeHeader'\r\n> & {\r\n  screenId: string;\r\n  headerConfig?: ScreenStackHeaderConfigProps;\r\n  contentStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nfunction ScreenStackItem(\r\n  {\r\n    children,\r\n    headerConfig,\r\n    activityState,\r\n    stackPresentation,\r\n    contentStyle,\r\n    style,\r\n    screenId,\r\n    ...rest\r\n  }: Props,\r\n  ref: React.ForwardedRef<View>,\r\n) {\r\n  const currentScreenRef = React.useRef<View | null>(null);\r\n  const screenRefs = React.useContext(RNSScreensRefContext);\r\n\r\n  React.useImperativeHandle(ref, () => currentScreenRef.current!);\r\n\r\n  const isHeaderInModal =\r\n    Platform.OS === 'android'\r\n      ? false\r\n      : stackPresentation !== 'push' && headerConfig?.hidden === false;\r\n\r\n  const headerHiddenPreviousRef = React.useRef(headerConfig?.hidden);\r\n\r\n  React.useEffect(() => {\r\n    warnOnce(\r\n      Platform.OS !== 'android' &&\r\n        stackPresentation !== 'push' &&\r\n        headerHiddenPreviousRef.current !== headerConfig?.hidden,\r\n      `Dynamically changing header's visibility in modals will result in remounting the screen and losing all local state.`,\r\n    );\r\n\r\n    headerHiddenPreviousRef.current = headerConfig?.hidden;\r\n  }, [headerConfig?.hidden, stackPresentation]);\r\n\r\n  const content = (\r\n    <>\r\n      <DebugContainer\r\n        style={[\r\n          stackPresentation === 'formSheet'\r\n            ? Platform.OS === 'ios'\r\n              ? styles.absolute\r\n              : null\r\n            : styles.container,\r\n          contentStyle,\r\n        ]}\r\n        stackPresentation={stackPresentation ?? 'push'}>\r\n        {children}\r\n      </DebugContainer>\r\n      {/**\r\n       * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\r\n       * We don't render it conditionally based on visibility to make it possible to dynamically render a custom `header`\r\n       * Otherwise dynamically rendering a custom `header` leaves the native header visible\r\n       *\r\n       * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\r\n       *\r\n       * HeaderConfig must not be first child of a Screen.\r\n       * See https://github.com/software-mansion/react-native-screens/pull/1825\r\n       * for detailed explanation.\r\n       */}\r\n      <ScreenStackHeaderConfig {...headerConfig} />\r\n    </>\r\n  );\r\n\r\n  // We take backgroundColor from contentStyle and apply it on Screen.\r\n  // This allows to workaround one issue with truncated\r\n  // content with formSheet presentation.\r\n  let internalScreenStyle;\r\n\r\n  if (stackPresentation === 'formSheet' && contentStyle) {\r\n    const flattenContentStyles = StyleSheet.flatten(contentStyle);\r\n    internalScreenStyle = {\r\n      backgroundColor: flattenContentStyles?.backgroundColor,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Screen\r\n      ref={node => {\r\n        currentScreenRef.current = node;\r\n\r\n        if (screenRefs === null) {\r\n          console.warn(\r\n            'Looks like RNSScreensRefContext is missing. Make sure the ScreenStack component is wrapped in it',\r\n          );\r\n          return;\r\n        }\r\n\r\n        const currentRefs = screenRefs.current;\r\n\r\n        if (node === null) {\r\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\r\n          delete currentRefs[screenId];\r\n        } else {\r\n          currentRefs[screenId] = { current: node };\r\n        }\r\n      }}\r\n      enabled\r\n      isNativeStack\r\n      activityState={activityState}\r\n      stackPresentation={stackPresentation}\r\n      hasLargeHeader={headerConfig?.largeTitle ?? false}\r\n      style={[style, internalScreenStyle]}\r\n      {...rest}>\r\n      {isHeaderInModal ? (\r\n        <ScreenStack style={styles.container}>\r\n          <Screen\r\n            enabled\r\n            isNativeStack\r\n            activityState={activityState}\r\n            hasLargeHeader={headerConfig?.largeTitle ?? false}\r\n            style={StyleSheet.absoluteFill}>\r\n            {content}\r\n          </Screen>\r\n        </ScreenStack>\r\n      ) : (\r\n        content\r\n      )}\r\n    </Screen>\r\n  );\r\n}\r\n\r\nexport default React.forwardRef(ScreenStackItem);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  absolute: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    start: 0,\r\n    end: 0,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}