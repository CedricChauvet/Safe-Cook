{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NavigationBuilderContext = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nconst NavigationBuilderContext = exports.NavigationBuilderContext = React.createContext({\n  onDispatchAction: () => undefined,\n  onOptionsChange: () => undefined,\n  scheduleUpdate: () => {\n    throw new Error(\"Couldn't find a context for scheduling updates.\");\n  },\n  flushUpdates: () => {\n    throw new Error(\"Couldn't find a context for flushing updates.\");\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","NavigationBuilderContext","exports","createContext","onDispatchAction","undefined","onOptionsChange","scheduleUpdate","Error","flushUpdates"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\@react-navigation\\core\\src\\NavigationBuilderContext.tsx"],"sourcesContent":["import type {\r\n  NavigationAction,\r\n  NavigationState,\r\n  ParamListBase,\r\n} from '@react-navigation/routers';\r\nimport * as React from 'react';\r\n\r\nimport type { NavigationHelpers } from './types';\r\n\r\nexport type ListenerMap = {\r\n  action: ChildActionListener;\r\n  focus: FocusedNavigationListener;\r\n};\r\n\r\nexport type KeyedListenerMap = {\r\n  getState: GetStateListener;\r\n  beforeRemove: ChildBeforeRemoveListener;\r\n};\r\n\r\nexport type AddListener = <T extends keyof ListenerMap>(\r\n  type: T,\r\n  listener: ListenerMap[T]\r\n) => void;\r\n\r\nexport type AddKeyedListener = <T extends keyof KeyedListenerMap>(\r\n  type: T,\r\n  key: string,\r\n  listener: KeyedListenerMap[T]\r\n) => void;\r\n\r\nexport type ChildActionListener = (\r\n  action: NavigationAction,\r\n  visitedNavigators?: Set<string>\r\n) => boolean;\r\n\r\nexport type FocusedNavigationCallback<T> = (\r\n  navigation: NavigationHelpers<ParamListBase>\r\n) => T;\r\n\r\nexport type FocusedNavigationListener = <T>(\r\n  callback: FocusedNavigationCallback<T>\r\n) => {\r\n  handled: boolean;\r\n  result: T;\r\n};\r\n\r\nexport type GetStateListener = () => NavigationState;\r\n\r\nexport type ChildBeforeRemoveListener = (action: NavigationAction) => boolean;\r\n\r\n/**\r\n * Context which holds the required helpers needed to build nested navigators.\r\n */\r\nexport const NavigationBuilderContext = React.createContext<{\r\n  onAction?: (\r\n    action: NavigationAction,\r\n    visitedNavigators?: Set<string>\r\n  ) => boolean;\r\n  addListener?: AddListener;\r\n  addKeyedListener?: AddKeyedListener;\r\n  onRouteFocus?: (key: string) => void;\r\n  onDispatchAction: (action: NavigationAction, noop: boolean) => void;\r\n  onOptionsChange: (options: object) => void;\r\n  scheduleUpdate: (callback: () => void) => void;\r\n  flushUpdates: () => void;\r\n  stackRef?: React.MutableRefObject<string | undefined>;\r\n}>({\r\n  onDispatchAction: () => undefined,\r\n  onOptionsChange: () => undefined,\r\n  scheduleUpdate: () => {\r\n    throw new Error(\"Couldn't find a context for scheduling updates.\");\r\n  },\r\n  flushUpdates: () => {\r\n    throw new Error(\"Couldn't find a context for flushing updates.\");\r\n  },\r\n});\r\n"],"mappings":";;;;;;AAKA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA+B,SAAAC,yBAAAC,CAAA;EAAA,yBAAAC,OAAA;EAAA,IAAAC,CAAA,OAAAD,OAAA;IAAAE,CAAA,OAAAF,OAAA;EAAA,QAAAF,wBAAA,YAAAA,CAAAC,CAAA;IAAA,OAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA;EAAA,GAAAF,CAAA;AAAA;AAAA,SAAAH,wBAAAG,CAAA,EAAAE,CAAA;EAAA,KAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA;EAAA,aAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA;IAAAK,OAAA,EAAAL;EAAA;EAAA,IAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA;EAAA,IAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA;EAAA,IAAAQ,CAAA;MAAAC,SAAA;IAAA;IAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA;EAAA,SAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA;IAAA,IAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA;IAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA;EAAA;EAAA,OAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA;AAgDxB,MAAMW,wBAAwB,GAAAC,OAAA,CAAAD,wBAAA,GAAGvB,KAAK,CAACyB,aAAa,CAaxD;EACDC,gBAAgB,EAAEA,CAAA,KAAMC,SAAS;EACjCC,eAAe,EAAEA,CAAA,KAAMD,SAAS;EAChCE,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE,CAAC;EACDC,YAAY,EAAEA,CAAA,KAAM;IAClB,MAAM,IAAID,KAAK,CAAC,+CAA+C,CAAC;EAClE;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}