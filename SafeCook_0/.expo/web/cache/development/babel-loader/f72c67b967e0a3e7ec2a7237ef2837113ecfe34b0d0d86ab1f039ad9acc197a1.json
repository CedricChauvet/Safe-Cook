{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"href\"];\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHandleMouseEvent = void 0;\nconst react_native_1 = require(\"react-native-web/dist/index\");\nconst expo = __importStar(require(\"../fork/getPathFromState-forks\"));\nconst router_store_1 = require(\"../global-state/router-store\");\nconst matchers_1 = require(\"../matchers\");\nconst useDomComponentNavigation_1 = require(\"./useDomComponentNavigation\");\nfunction eventShouldPreventDefault(e) {\n  if (e?.defaultPrevented) {\n    return false;\n  }\n  if ('button' in e && !e.metaKey && !e.altKey && !e.ctrlKey && !e.shiftKey && (e.button == null || e.button === 0) && [undefined, null, '', 'self'].includes(e.currentTarget.target)) {\n    return true;\n  }\n  return false;\n}\nfunction useLinkToPathProps(_ref) {\n  let {\n      href\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    linkTo\n  } = (0, router_store_1.useExpoRouter)();\n  const onPress = event => {\n    if (shouldHandleMouseEvent(event)) {\n      if ((0, useDomComponentNavigation_1.emitDomLinkEvent)(href, options)) {\n        return;\n      }\n      linkTo(href, options);\n    }\n  };\n  return {\n    href: expo.appendBaseUrl((0, matchers_1.stripGroupSegmentsFromPath)(href) || '/'),\n    role: 'link',\n    onPress\n  };\n}\nexports.default = useLinkToPathProps;\nfunction shouldHandleMouseEvent(event) {\n  if (react_native_1.Platform.OS !== 'web') {\n    return !event?.defaultPrevented;\n  }\n  if (event && eventShouldPreventDefault(event)) {\n    event.preventDefault();\n    return true;\n  }\n  return false;\n}\nexports.shouldHandleMouseEvent = shouldHandleMouseEvent;","map":{"version":3,"names":["expo","__importStar","require","router_store_1","matchers_1","useDomComponentNavigation_1","eventShouldPreventDefault","e","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","undefined","includes","currentTarget","target","useLinkToPathProps","_ref","href","options","_objectWithoutPropertiesLoose","_excluded","linkTo","useExpoRouter","onPress","event","shouldHandleMouseEvent","emitDomLinkEvent","appendBaseUrl","stripGroupSegmentsFromPath","role","exports","default","react_native_1","Platform","OS","preventDefault"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\expo-router\\src\\link\\useLinkToPathProps.tsx"],"sourcesContent":["import { MouseEvent } from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport * as expo from '../fork/getPathFromState-forks';\nimport { useExpoRouter } from '../global-state/router-store';\nimport { LinkToOptions } from '../global-state/routing';\nimport { stripGroupSegmentsFromPath } from '../matchers';\nimport { emitDomLinkEvent } from './useDomComponentNavigation';\n\nfunction eventShouldPreventDefault(\n  e: MouseEvent<HTMLAnchorElement> | GestureResponderEvent\n): boolean {\n  if (e?.defaultPrevented) {\n    return false;\n  }\n\n  if (\n    // Only check MouseEvents\n    'button' in e &&\n    // ignore clicks with modifier keys\n    !e.metaKey &&\n    !e.altKey &&\n    !e.ctrlKey &&\n    !e.shiftKey &&\n    (e.button == null || e.button === 0) && // Only accept left clicks\n    [undefined, null, '', 'self'].includes(e.currentTarget.target) // let browser handle \"target=_blank\" etc.\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\ntype UseLinkToPathPropsOptions = LinkToOptions & {\n  href: string;\n};\n\nexport default function useLinkToPathProps({ href, ...options }: UseLinkToPathPropsOptions) {\n  const { linkTo } = useExpoRouter();\n\n  const onPress = (event?: MouseEvent<HTMLAnchorElement> | GestureResponderEvent) => {\n    if (shouldHandleMouseEvent(event)) {\n      if (emitDomLinkEvent(href, options)) {\n        return;\n      }\n      linkTo(href, options);\n    }\n  };\n\n  return {\n    // Ensure there's always a value for href. Manually append the baseUrl to the href prop that shows in the static HTML.\n    href: expo.appendBaseUrl(stripGroupSegmentsFromPath(href) || '/'),\n    role: 'link' as const,\n    onPress,\n  };\n}\n\nexport function shouldHandleMouseEvent(\n  event?: MouseEvent<HTMLAnchorElement> | GestureResponderEvent\n) {\n  if (Platform.OS !== 'web') {\n    return !event?.defaultPrevented;\n  }\n\n  if (event && eventShouldPreventDefault(event)) {\n    event.preventDefault();\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAAA,IAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,MAAAC,cAAA,GAAAD,OAAA;AAEA,MAAAE,UAAA,GAAAF,OAAA;AACA,MAAAG,2BAAA,GAAAH,OAAA;AAEA,SAASI,yBAAyBA,CAChCC,CAAwD;EAExD,IAAIA,CAAC,EAAEC,gBAAgB,EAAE;IACvB,OAAO,KAAK;;EAGd,IAEE,QAAQ,IAAID,CAAC,IAEb,CAACA,CAAC,CAACE,OAAO,IACV,CAACF,CAAC,CAACG,MAAM,IACT,CAACH,CAAC,CAACI,OAAO,IACV,CAACJ,CAAC,CAACK,QAAQ,KACVL,CAAC,CAACM,MAAM,IAAI,IAAI,IAAIN,CAAC,CAACM,MAAM,KAAK,CAAC,CAAC,IACpC,CAACC,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAACC,QAAQ,CAACR,CAAC,CAACS,aAAa,CAACC,MAAM,CAAC,EAC9D;IACA,OAAO,IAAI;;EAGb,OAAO,KAAK;AACd;AAMA,SAAwBC,kBAAkBA,CAAAC,IAAA,EAAgD;EAAA,IAA/C;MAAEC;IAAgB,CAA6B,GAAAD,IAAA;IAApCE,OAAO,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;EAC3D,MAAM;IAAEC;EAAM,CAAE,GAAG,IAAArB,cAAA,CAAAsB,aAAa,GAAE;EAElC,MAAMC,OAAO,GAAIC,KAA6D,IAAI;IAChF,IAAIC,sBAAsB,CAACD,KAAK,CAAC,EAAE;MACjC,IAAI,IAAAtB,2BAAA,CAAAwB,gBAAgB,EAACT,IAAI,EAAEC,OAAO,CAAC,EAAE;QACnC;;MAEFG,MAAM,CAACJ,IAAI,EAAEC,OAAO,CAAC;;EAEzB,CAAC;EAED,OAAO;IAELD,IAAI,EAAEpB,IAAI,CAAC8B,aAAa,CAAC,IAAA1B,UAAA,CAAA2B,0BAA0B,EAACX,IAAI,CAAC,IAAI,GAAG,CAAC;IACjEY,IAAI,EAAE,MAAe;IACrBN;GACD;AACH;AAlBAO,OAAA,CAAAC,OAAA,GAAAhB,kBAAA;AAoBA,SAAgBU,sBAAsBA,CACpCD,KAA6D;EAE7D,IAAIQ,cAAA,CAAAC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzB,OAAO,CAACV,KAAK,EAAEnB,gBAAgB;;EAGjC,IAAImB,KAAK,IAAIrB,yBAAyB,CAACqB,KAAK,CAAC,EAAE;IAC7CA,KAAK,CAACW,cAAc,EAAE;IACtB,OAAO,IAAI;;EAGb,OAAO,KAAK;AACd;AAbAL,OAAA,CAAAL,sBAAA,GAAAA,sBAAA","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}