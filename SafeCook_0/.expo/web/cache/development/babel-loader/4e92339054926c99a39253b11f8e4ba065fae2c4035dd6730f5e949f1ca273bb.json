{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chauv\\\\Desktop\\\\holberton-demoday\\\\Safe-Cook\\\\SafeCook_0\\\\node_modules\\\\@expo\\\\metro-runtime\\\\src\\\\error-overlay\\\\UI\\\\AnsiHighlight.tsx\";\nimport Anser from 'anser';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)'\n};\nexport function Ansi({\n  text,\n  style\n}) {\n  let commonWhitespaceLength = Infinity;\n  const parsedLines = text.split(/\\n/).map(line => Anser.ansiToJson(line, {\n    json: true,\n    remove_empty: true,\n    use_classes: true\n  }));\n  parsedLines.map(lines => {\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\n    const whitespaceLength = match && match[0]?.length || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n  const getText = (content, key) => {\n    if (key === 1) {\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n  return _jsxDEV(_Fragment, {\n    children: parsedLines.map((items, i) => _jsxDEV(View, {\n      style: styles.line,\n      children: items.map((bundle, key) => {\n        const textStyle = bundle.fg && COLORS[bundle.fg] ? {\n          backgroundColor: bundle.bg && COLORS[bundle.bg],\n          color: bundle.fg && COLORS[bundle.fg]\n        } : {\n          backgroundColor: bundle.bg && COLORS[bundle.bg]\n        };\n        return _jsxDEV(Text, {\n          style: [style, textStyle],\n          children: getText(bundle.content, key)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this);\n      })\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\nconst styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["Anser","React","StyleSheet","Text","View","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","Ansi","text","style","commonWhitespaceLength","Infinity","parsedLines","split","map","line","ansiToJson","json","remove_empty","use_classes","lines","match","content","whitespaceLength","length","getText","key","replace","substr","children","items","i","styles","bundle","textStyle","fg","backgroundColor","bg","color","fileName","_jsxFileName","lineNumber","columnNumber","create","flexDirection"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/@expo/metro-runtime/src/error-overlay/UI/AnsiHighlight.tsx"],"sourcesContent":["/**\r\n * Copyright (c) 650 Industries.\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport Anser from 'anser';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport type { StyleProp, TextStyle } from 'react-native';\r\n\r\n// Afterglow theme from https://iterm2colorschemes.com/\r\nconst COLORS: Record<string, string> = {\r\n  'ansi-black': 'rgb(27, 27, 27)',\r\n  'ansi-red': 'rgb(187, 86, 83)',\r\n  'ansi-green': 'rgb(144, 157, 98)',\r\n  'ansi-yellow': 'rgb(234, 193, 121)',\r\n  'ansi-blue': 'rgb(125, 169, 199)',\r\n  'ansi-magenta': 'rgb(176, 101, 151)',\r\n  'ansi-cyan': 'rgb(140, 220, 216)',\r\n  // Instead of white, use the default color provided to the component\r\n  // 'ansi-white': 'rgb(216, 216, 216)',\r\n  'ansi-bright-black': 'rgb(98, 98, 98)',\r\n  'ansi-bright-red': 'rgb(187, 86, 83)',\r\n  'ansi-bright-green': 'rgb(144, 157, 98)',\r\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\r\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\r\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\r\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\r\n  'ansi-bright-white': 'rgb(247, 247, 247)',\r\n};\r\n\r\nexport function Ansi({ text, style }: { text: string; style: StyleProp<TextStyle> }) {\r\n  let commonWhitespaceLength = Infinity;\r\n  const parsedLines = text.split(/\\n/).map((line) =>\r\n    Anser.ansiToJson(line, {\r\n      json: true,\r\n      remove_empty: true,\r\n      use_classes: true,\r\n    })\r\n  );\r\n\r\n  parsedLines.map((lines) => {\r\n    // The third item on each line includes the whitespace of the source code.\r\n    // We are looking for the least amount of common whitespace to trim all lines.\r\n    // Example: Array [\" \", \" 96 |\", \"     text\", ...]\r\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\r\n    const whitespaceLength = (match && match[0]?.length) || 0;\r\n    if (whitespaceLength < commonWhitespaceLength) {\r\n      commonWhitespaceLength = whitespaceLength;\r\n    }\r\n  });\r\n\r\n  const getText = (content: string, key: number) => {\r\n    if (key === 1) {\r\n      // Remove the vertical bar after line numbers\r\n      return content.replace(/\\| $/, ' ');\r\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\r\n      // Remove common whitespace at the beginning of the line\r\n      return content.substr(commonWhitespaceLength);\r\n    } else {\r\n      return content;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {parsedLines.map((items, i) => (\r\n        <View style={styles.line} key={i}>\r\n          {items.map((bundle, key) => {\r\n            const textStyle =\r\n              bundle.fg && COLORS[bundle.fg]\r\n                ? {\r\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\r\n                    color: bundle.fg && COLORS[bundle.fg],\r\n                  }\r\n                : {\r\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\r\n                  };\r\n            return (\r\n              <Text style={[style, textStyle]} key={key}>\r\n                {getText(bundle.content, key)}\r\n              </Text>\r\n            );\r\n          })}\r\n        </View>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  line: {\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}