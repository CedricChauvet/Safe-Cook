{"ast":null,"code":"import HMRClient from './HMRClient';\nif (true && typeof window.ReactNativeWebView !== 'undefined') {\n  ['trace', 'info', 'warn', 'error', 'log', 'group', 'groupCollapsed', 'groupEnd', 'debug'].forEach(level => {\n    const originalFunction = console[level];\n    console[level] = function (...args) {\n      HMRClient.log(level, args);\n      originalFunction.apply(console, args);\n    };\n  });\n  HMRClient.log('log', [`[webview] Logs will also appear in the Safari/Chrome debug console`]);\n} else {\n  HMRClient.log('log', [`[web] Logs will appear in the browser console`]);\n}\nHMRClient.setup({\n  isEnabled: true\n});","map":{"version":3,"names":["HMRClient","window","ReactNativeWebView","forEach","level","originalFunction","console","args","log","apply","setup","isEnabled"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/@expo/metro-runtime/src/setupHMR.ts"],"sourcesContent":["import HMRClient from './HMRClient';\r\n\r\nif (\r\n  typeof window !== 'undefined' &&\r\n  // @ts-expect-error: Added via react-native-webview\r\n  typeof window.ReactNativeWebView !== 'undefined'\r\n) {\r\n  // Sets up developer tools for web platforms when running in a webview. This ensures that logs are visible in the terminal.\r\n  // We assume full control over the console and send JavaScript logs to Metro.\r\n  ['trace', 'info', 'warn', 'error', 'log', 'group', 'groupCollapsed', 'groupEnd', 'debug'].forEach(\r\n    (level) => {\r\n      const originalFunction = console[level];\r\n      console[level] = function (...args: readonly any[]) {\r\n        HMRClient.log(\r\n          // @ts-expect-error\r\n          level,\r\n          args\r\n        );\r\n        originalFunction.apply(console, args);\r\n      };\r\n    }\r\n  );\r\n  HMRClient.log('log', [`[webview] Logs will also appear in the Safari/Chrome debug console`]);\r\n} else {\r\n  HMRClient.log('log', [`[web] Logs will appear in the browser console`]);\r\n}\r\n\r\n// This is called native on native platforms\r\nHMRClient.setup({ isEnabled: true });\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;AAEnC,IACE,QAEA,OAAOC,MAAM,CAACC,kBAAkB,KAAK,WAAW,EAChD;EAGA,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,OAAO,CAAC,CAACC,OAAO,CAC9FC,KAAK,IAAK;IACT,MAAMC,gBAAgB,GAAGC,OAAO,CAACF,KAAK,CAAC;IACvCE,OAAO,CAACF,KAAK,CAAC,GAAG,UAAU,GAAGG,IAAoB,EAAE;MAClDP,SAAS,CAACQ,GAAG,CAEXJ,KAAK,EACLG,IACF,CAAC;MACDF,gBAAgB,CAACI,KAAK,CAACH,OAAO,EAAEC,IAAI,CAAC;IACvC,CAAC;EACH,CACF,CAAC;EACDP,SAAS,CAACQ,GAAG,CAAC,KAAK,EAAE,CAAC,oEAAoE,CAAC,CAAC;AAC9F,CAAC,MAAM;EACLR,SAAS,CAACQ,GAAG,CAAC,KAAK,EAAE,CAAC,+CAA+C,CAAC,CAAC;AACzE;AAGAR,SAAS,CAACU,KAAK,CAAC;EAAEC,SAAS,EAAE;AAAK,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}