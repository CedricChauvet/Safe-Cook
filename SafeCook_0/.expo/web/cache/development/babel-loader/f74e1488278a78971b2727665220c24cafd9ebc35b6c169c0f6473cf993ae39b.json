{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutPropertiesLoose = require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\nconst _excluded = [\"emit\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useNavigationCache = useNavigationCache;\nvar _routers = require(\"@react-navigation/routers\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _NavigationBuilderContext = require(\"./NavigationBuilderContext.js\");\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n.default = e, t && t.set(e, n), n;\n}\nfunction useNavigationCache({\n  state,\n  getState,\n  navigation,\n  setOptions,\n  router,\n  emitter\n}) {\n  const {\n    stackRef\n  } = React.useContext(_NavigationBuilderContext.NavigationBuilderContext);\n  const base = React.useMemo(() => {\n    const rest = _objectWithoutPropertiesLoose(navigation, _excluded);\n    const actions = Object.assign({}, router.actionCreators, _routers.CommonActions);\n    const dispatch = () => {\n      throw new Error('Actions cannot be dispatched from a placeholder screen.');\n    };\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      acc[name] = dispatch;\n      return acc;\n    }, {});\n    return Object.assign({}, rest, helpers, {\n      addListener: () => {\n        return () => {};\n      },\n      removeListener: () => {},\n      dispatch,\n      getParent: id => {\n        if (id !== undefined && id === rest.getId()) {\n          return base;\n        }\n        return rest.getParent(id);\n      },\n      setOptions: () => {\n        throw new Error('Options cannot be set from a placeholder screen.');\n      },\n      isFocused: () => false\n    });\n  }, [navigation, router.actionCreators]);\n  const cache = React.useMemo(() => ({\n    current: {}\n  }), [base, getState, navigation, setOptions, emitter]);\n  cache.current = state.routes.reduce((acc, route) => {\n    const previous = cache.current[route.key];\n    if (previous) {\n      acc[route.key] = previous;\n    } else {\n      const dispatch = thunk => {\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\n        if (action != null) {\n          navigation.dispatch(Object.assign({\n            source: route.key\n          }, action));\n        }\n      };\n      const withStack = callback => {\n        let isStackSet = false;\n        try {\n          if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {\n            stackRef.current = new Error().stack;\n            isStackSet = true;\n          }\n          callback();\n        } finally {\n          if (isStackSet && stackRef) {\n            stackRef.current = undefined;\n          }\n        }\n      };\n      const actions = Object.assign({}, router.actionCreators, _routers.CommonActions);\n      const helpers = Object.keys(actions).reduce((acc, name) => {\n        acc[name] = (...args) => withStack(() => dispatch(actions[name](...args)));\n        return acc;\n      }, {});\n      acc[route.key] = Object.assign({}, base, helpers, emitter.create(route.key), {\n        dispatch: thunk => withStack(() => dispatch(thunk)),\n        getParent: id => {\n          if (id !== undefined && id === base.getId()) {\n            return acc[route.key];\n          }\n          return base.getParent(id);\n        },\n        setOptions: options => {\n          setOptions(o => Object.assign({}, o, {\n            [route.key]: Object.assign({}, o[route.key], options)\n          }));\n        },\n        isFocused: () => {\n          const state = base.getState();\n          if (state.routes[state.index].key !== route.key) {\n            return false;\n          }\n          return navigation ? navigation.isFocused() : true;\n        }\n      });\n    }\n    return acc;\n  }, {});\n  return {\n    base,\n    navigations: cache.current\n  };\n}","map":{"version":3,"names":["_routers","require","React","_interopRequireWildcard","_NavigationBuilderContext","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","useNavigationCache","state","getState","navigation","setOptions","router","emitter","stackRef","useContext","NavigationBuilderContext","base","useMemo","rest","_objectWithoutPropertiesLoose","_excluded","actions","assign","actionCreators","CommonActions","dispatch","Error","helpers","keys","reduce","acc","name","addListener","removeListener","getParent","id","undefined","getId","isFocused","cache","current","routes","route","previous","key","thunk","action","source","withStack","callback","isStackSet","process","env","NODE_ENV","stack","args","create","options","o","index","navigations"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\@react-navigation\\core\\src\\useNavigationCache.tsx"],"sourcesContent":["import {\r\n  CommonActions,\r\n  type NavigationAction,\r\n  type NavigationState,\r\n  type ParamListBase,\r\n  type Router,\r\n} from '@react-navigation/routers';\r\nimport * as React from 'react';\r\n\r\nimport { NavigationBuilderContext } from './NavigationBuilderContext';\r\nimport type { NavigationHelpers, NavigationProp } from './types';\r\nimport type { NavigationEventEmitter } from './useEventEmitter';\r\n\r\ntype Options<\r\n  State extends NavigationState,\r\n  ScreenOptions extends {},\r\n  EventMap extends Record<string, any>,\r\n> = {\r\n  state: State;\r\n  getState: () => State;\r\n  navigation: NavigationHelpers<ParamListBase> &\r\n    Partial<NavigationProp<ParamListBase, string, any, any, any>>;\r\n  setOptions: (\r\n    cb: (\r\n      options: Record<string, ScreenOptions>\r\n    ) => Record<string, ScreenOptions>\r\n  ) => void;\r\n  router: Router<State, NavigationAction>;\r\n  emitter: NavigationEventEmitter<EventMap>;\r\n};\r\n\r\ntype NavigationItem<\r\n  State extends NavigationState,\r\n  ScreenOptions extends {},\r\n  EventMap extends Record<string, any>,\r\n> = NavigationProp<\r\n  ParamListBase,\r\n  string,\r\n  string | undefined,\r\n  State,\r\n  ScreenOptions,\r\n  EventMap\r\n>;\r\n\r\ntype NavigationCache<\r\n  State extends NavigationState,\r\n  ScreenOptions extends {},\r\n  EventMap extends Record<string, any>,\r\n> = Record<string, NavigationItem<State, ScreenOptions, EventMap>>;\r\n\r\n/**\r\n * Hook to cache navigation objects for each screen in the navigator.\r\n * It's important to cache them to make sure navigation objects don't change between renders.\r\n * This lets us apply optimizations like `React.memo` to minimize re-rendering screens.\r\n */\r\nexport function useNavigationCache<\r\n  State extends NavigationState,\r\n  ScreenOptions extends {},\r\n  EventMap extends Record<string, any>,\r\n  ActionHelpers extends Record<string, () => void>,\r\n>({\r\n  state,\r\n  getState,\r\n  navigation,\r\n  setOptions,\r\n  router,\r\n  emitter,\r\n}: Options<State, ScreenOptions, EventMap>) {\r\n  const { stackRef } = React.useContext(NavigationBuilderContext);\r\n\r\n  const base = React.useMemo((): NavigationItem<\r\n    State,\r\n    ScreenOptions,\r\n    EventMap\r\n  > &\r\n    ActionHelpers => {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const { emit, ...rest } = navigation;\r\n\r\n    const actions = {\r\n      ...router.actionCreators,\r\n      ...CommonActions,\r\n    };\r\n\r\n    const dispatch = () => {\r\n      throw new Error(\r\n        'Actions cannot be dispatched from a placeholder screen.'\r\n      );\r\n    };\r\n\r\n    const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\r\n      (acc, name) => {\r\n        acc[name] = dispatch;\r\n\r\n        return acc;\r\n      },\r\n      {}\r\n    ) as ActionHelpers;\r\n\r\n    return {\r\n      ...rest,\r\n      ...helpers,\r\n      addListener: () => {\r\n        // Event listeners are not supported for placeholder screens\r\n\r\n        return () => {\r\n          // Empty function\r\n        };\r\n      },\r\n      removeListener: () => {\r\n        // Event listeners are not supported for placeholder screens\r\n      },\r\n      dispatch,\r\n      getParent: (id?: string) => {\r\n        if (id !== undefined && id === rest.getId()) {\r\n          return base;\r\n        }\r\n\r\n        return rest.getParent(id);\r\n      },\r\n      setOptions: () => {\r\n        throw new Error('Options cannot be set from a placeholder screen.');\r\n      },\r\n      isFocused: () => false,\r\n    };\r\n  }, [navigation, router.actionCreators]);\r\n\r\n  // Cache object which holds navigation objects for each screen\r\n  // We use `React.useMemo` instead of `React.useRef` coz we want to invalidate it when deps change\r\n  // In reality, these deps will rarely change, if ever\r\n  const cache = React.useMemo(\r\n    () => ({ current: {} as NavigationCache<State, ScreenOptions, EventMap> }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [base, getState, navigation, setOptions, emitter]\r\n  );\r\n\r\n  cache.current = state.routes.reduce<\r\n    NavigationCache<State, ScreenOptions, EventMap>\r\n  >((acc, route) => {\r\n    const previous = cache.current[route.key];\r\n\r\n    type Thunk =\r\n      | NavigationAction\r\n      | ((state: State) => NavigationAction | null | undefined);\r\n\r\n    if (previous) {\r\n      // If a cached navigation object already exists, reuse it\r\n      acc[route.key] = previous;\r\n    } else {\r\n      const dispatch = (thunk: Thunk) => {\r\n        const action = typeof thunk === 'function' ? thunk(getState()) : thunk;\r\n\r\n        if (action != null) {\r\n          navigation.dispatch({ source: route.key, ...action });\r\n        }\r\n      };\r\n\r\n      const withStack = (callback: () => void) => {\r\n        let isStackSet = false;\r\n\r\n        try {\r\n          if (\r\n            process.env.NODE_ENV !== 'production' &&\r\n            stackRef &&\r\n            !stackRef.current\r\n          ) {\r\n            // Capture the stack trace for devtools\r\n            stackRef.current = new Error().stack;\r\n            isStackSet = true;\r\n          }\r\n\r\n          callback();\r\n        } finally {\r\n          if (isStackSet && stackRef) {\r\n            stackRef.current = undefined;\r\n          }\r\n        }\r\n      };\r\n\r\n      const actions = {\r\n        ...router.actionCreators,\r\n        ...CommonActions,\r\n      };\r\n\r\n      const helpers = Object.keys(actions).reduce<Record<string, () => void>>(\r\n        (acc, name) => {\r\n          acc[name] = (...args: any) =>\r\n            withStack(() =>\r\n              // @ts-expect-error: name is a valid key, but TypeScript is dumb\r\n              dispatch(actions[name](...args))\r\n            );\r\n\r\n          return acc;\r\n        },\r\n        {}\r\n      );\r\n\r\n      acc[route.key] = {\r\n        ...base,\r\n        ...helpers,\r\n        // FIXME: too much work to fix the types for now\r\n        ...(emitter.create(route.key) as any),\r\n        dispatch: (thunk: Thunk) => withStack(() => dispatch(thunk)),\r\n        getParent: (id?: string) => {\r\n          if (id !== undefined && id === base.getId()) {\r\n            // If the passed id is the same as the current navigation id,\r\n            // we return the cached navigation object for the relevant route\r\n            return acc[route.key];\r\n          }\r\n\r\n          return base.getParent(id);\r\n        },\r\n        setOptions: (options: object) => {\r\n          setOptions((o) => ({\r\n            ...o,\r\n            [route.key]: { ...o[route.key], ...options },\r\n          }));\r\n        },\r\n        isFocused: () => {\r\n          const state = base.getState();\r\n\r\n          if (state.routes[state.index].key !== route.key) {\r\n            return false;\r\n          }\r\n\r\n          // If the current screen is focused, we also need to check if parent navigator is focused\r\n          // This makes sure that we return the focus state in the whole tree, not just this navigator\r\n          return navigation ? navigation.isFocused() : true;\r\n        },\r\n      };\r\n    }\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  return {\r\n    base,\r\n    navigations: cache.current,\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}