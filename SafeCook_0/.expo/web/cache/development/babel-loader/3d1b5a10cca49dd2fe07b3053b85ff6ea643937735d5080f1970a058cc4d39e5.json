{"ast":null,"code":"function openFileInEditor(file, lineNumber) {\n  if (process.env.NODE_ENV !== 'production') {\n    const baseUrl = window.location.protocol + '//' + window.location.host;\n    fetch(baseUrl + '/open-stack-frame', {\n      method: 'POST',\n      body: JSON.stringify({\n        file,\n        lineNumber\n      })\n    });\n  }\n}\nexport default openFileInEditor;","map":{"version":3,"names":["openFileInEditor","file","lineNumber","process","env","NODE_ENV","baseUrl","window","location","protocol","host","fetch","method","body","JSON","stringify"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/@expo/metro-runtime/src/error-overlay/modules/openFileInEditor/index.ts"],"sourcesContent":["declare const process: any;\r\n\r\nfunction openFileInEditor(file: string, lineNumber: number) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // TODO: This is not a great URL since it now blocks users from accessing the `/open-stack-frame` url in their router\r\n    // ideally it would be something like `/_devtools/open-stack-frame`.\r\n    const baseUrl = window.location.protocol + '//' + window.location.host;\r\n\r\n    fetch(baseUrl + '/open-stack-frame', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ file, lineNumber }),\r\n    });\r\n  }\r\n}\r\n\r\nexport default openFileInEditor;\r\n"],"mappings":"AAEA,SAASA,gBAAgBA,CAACC,IAAY,EAAEC,UAAkB,EAAE;EAC1D,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IAGzC,MAAMC,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,IAAI;IAEtEC,KAAK,CAACL,OAAO,GAAG,mBAAmB,EAAE;MACnCM,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,IAAI;QAAEC;MAAW,CAAC;IAC3C,CAAC,CAAC;EACJ;AACF;AAEA,eAAeF,gBAAgB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}