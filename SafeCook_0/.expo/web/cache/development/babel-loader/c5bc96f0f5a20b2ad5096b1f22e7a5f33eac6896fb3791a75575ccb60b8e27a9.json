{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseRouter = void 0;\nvar _nonSecure = require(\"nanoid/non-secure\");\nconst BaseRouter = exports.BaseRouter = {\n  getStateForAction(state, action) {\n    switch (action.type) {\n      case 'SET_PARAMS':\n        {\n          const index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n          if (index === -1) {\n            return null;\n          }\n          return Object.assign({}, state, {\n            routes: state.routes.map((r, i) => i === index ? Object.assign({}, r, {\n              params: Object.assign({}, r.params, action.payload.params)\n            }) : r)\n          });\n        }\n      case 'RESET':\n        {\n          const nextState = action.payload;\n          if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n            return null;\n          }\n          if (nextState.stale === false) {\n            if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n              return null;\n            }\n            return Object.assign({}, nextState, {\n              routes: nextState.routes.map(route => route.key ? route : Object.assign({}, route, {\n                key: `${route.name}-${(0, _nonSecure.nanoid)()}`\n              }))\n            });\n          }\n          return nextState;\n        }\n      default:\n        return null;\n    }\n  },\n  shouldActionChangeFocus(action) {\n    return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n  }\n};","map":{"version":3,"names":["_nonSecure","require","BaseRouter","exports","getStateForAction","state","action","type","index","source","routes","findIndex","r","key","Object","assign","map","i","params","payload","nextState","length","some","route","routeNames","includes","name","stale","nanoid","shouldActionChangeFocus"],"sources":["C:\\Users\\chauv\\Desktop\\holberton-demoday\\Safe-Cook\\SafeCook_0\\node_modules\\@react-navigation\\routers\\src\\BaseRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\r\n\r\nimport type {\r\n  CommonNavigationAction,\r\n  NavigationState,\r\n  PartialState,\r\n} from './types';\r\n\r\n/**\r\n * Base router object that can be used when writing custom routers.\r\n * This provides few helper methods to handle common actions such as `RESET`.\r\n */\r\nexport const BaseRouter = {\r\n  getStateForAction<State extends NavigationState>(\r\n    state: State,\r\n    action: CommonNavigationAction\r\n  ): State | PartialState<State> | null {\r\n    switch (action.type) {\r\n      case 'SET_PARAMS': {\r\n        const index = action.source\r\n          ? state.routes.findIndex((r) => r.key === action.source)\r\n          : state.index;\r\n\r\n        if (index === -1) {\r\n          return null;\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          routes: state.routes.map((r, i) =>\r\n            i === index\r\n              ? { ...r, params: { ...r.params, ...action.payload.params } }\r\n              : r\r\n          ),\r\n        };\r\n      }\r\n\r\n      case 'RESET': {\r\n        const nextState = action.payload as State | PartialState<State>;\r\n\r\n        if (\r\n          nextState.routes.length === 0 ||\r\n          nextState.routes.some(\r\n            (route: { name: string }) => !state.routeNames.includes(route.name)\r\n          )\r\n        ) {\r\n          return null;\r\n        }\r\n\r\n        if (nextState.stale === false) {\r\n          if (\r\n            state.routeNames.length !== nextState.routeNames.length ||\r\n            nextState.routeNames.some(\r\n              (name) => !state.routeNames.includes(name)\r\n            )\r\n          ) {\r\n            return null;\r\n          }\r\n\r\n          return {\r\n            ...nextState,\r\n            routes: nextState.routes.map((route) =>\r\n              route.key ? route : { ...route, key: `${route.name}-${nanoid()}` }\r\n            ),\r\n          };\r\n        }\r\n\r\n        return nextState;\r\n      }\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  },\r\n\r\n  shouldActionChangeFocus(action: CommonNavigationAction) {\r\n    return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\r\n  },\r\n};\r\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAYO,MAAMC,UAAU,GAAAC,OAAA,CAAAD,UAAA,GAAG;EACxBE,iBAAiBA,CACfC,KAAY,EACZC,MAA8B,EACM;IACpC,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,YAAY;QAAE;UACjB,MAAMC,KAAK,GAAGF,MAAM,CAACG,MAAM,GACvBJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKP,MAAM,CAACG,MAAM,CAAC,GACtDJ,KAAK,CAACG,KAAK;UAEf,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,OAAO,IAAI;UACb;UAEA,OAAAM,MAAA,CAAAC,MAAA,KACKV,KAAK;YACRK,MAAM,EAAEL,KAAK,CAACK,MAAM,CAACM,GAAG,CAAC,CAACJ,CAAC,EAAEK,CAAC,KAC5BA,CAAC,KAAKT,KAAK,GAAAM,MAAA,CAAAC,MAAA,KACFH,CAAC;cAAEM,MAAM,EAAAJ,MAAA,CAAAC,MAAA,KAAOH,CAAC,CAACM,MAAM,EAAKZ,MAAM,CAACa,OAAO,CAACD,MAAA;YAAO,KACxDN,CACN;UAAA;QAEJ;MAEA,KAAK,OAAO;QAAE;UACZ,MAAMQ,SAAS,GAAGd,MAAM,CAACa,OAAsC;UAE/D,IACEC,SAAS,CAACV,MAAM,CAACW,MAAM,KAAK,CAAC,IAC7BD,SAAS,CAACV,MAAM,CAACY,IAAI,CAClBC,KAAuB,IAAK,CAAClB,KAAK,CAACmB,UAAU,CAACC,QAAQ,CAACF,KAAK,CAACG,IAAI,CACpE,CAAC,EACD;YACA,OAAO,IAAI;UACb;UAEA,IAAIN,SAAS,CAACO,KAAK,KAAK,KAAK,EAAE;YAC7B,IACEtB,KAAK,CAACmB,UAAU,CAACH,MAAM,KAAKD,SAAS,CAACI,UAAU,CAACH,MAAM,IACvDD,SAAS,CAACI,UAAU,CAACF,IAAI,CACtBI,IAAI,IAAK,CAACrB,KAAK,CAACmB,UAAU,CAACC,QAAQ,CAACC,IAAI,CAC3C,CAAC,EACD;cACA,OAAO,IAAI;YACb;YAEA,OAAAZ,MAAA,CAAAC,MAAA,KACKK,SAAS;cACZV,MAAM,EAAEU,SAAS,CAACV,MAAM,CAACM,GAAG,CAAEO,KAAK,IACjCA,KAAK,CAACV,GAAG,GAAGU,KAAK,GAAAT,MAAA,CAAAC,MAAA,KAAQQ,KAAK;gBAAEV,GAAG,EAAE,GAAGU,KAAK,CAACG,IAAI,IAAI,IAAA1B,UAAA,CAAA4B,MAAM,EAAC,CAAC;cAAA,EAChE;YAAA;UAEJ;UAEA,OAAOR,SAAS;QAClB;MAEA;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAEDS,uBAAuBA,CAACvB,MAA8B,EAAE;IACtD,OAAOA,MAAM,CAACC,IAAI,KAAK,UAAU,IAAID,MAAM,CAACC,IAAI,KAAK,qBAAqB;EAC5E;AACF,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}