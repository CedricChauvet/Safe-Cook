{"ast":null,"code":"import { useCallback, useEffect, useImperativeHandle } from 'react';\nimport { REGISTER_DOM_IMPERATIVE_HANDLE_PROPS } from './injection';\nexport function useDOMImperativeHandle(ref, init, deps) {\n  const isTargetWeb = typeof window.ReactNativeWebView === 'undefined';\n  const stubHandlerFactory = useCallback(() => ({}), deps ?? []);\n  useImperativeHandle(ref, isTargetWeb ? init : stubHandlerFactory, deps);\n  useEffect(() => {\n    if (!isTargetWeb) {\n      globalThis._domRefProxy = init();\n      window.ReactNativeWebView.postMessage(JSON.stringify({\n        type: REGISTER_DOM_IMPERATIVE_HANDLE_PROPS,\n        data: Object.keys(globalThis._domRefProxy)\n      }));\n    }\n    return () => {\n      if (!isTargetWeb) {\n        globalThis._domRefProxy = undefined;\n      }\n    };\n  }, deps);\n}","map":{"version":3,"names":["useCallback","useEffect","useImperativeHandle","REGISTER_DOM_IMPERATIVE_HANDLE_PROPS","useDOMImperativeHandle","ref","init","deps","isTargetWeb","window","ReactNativeWebView","stubHandlerFactory","globalThis","_domRefProxy","postMessage","JSON","stringify","type","data","Object","keys","undefined"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/expo/src/dom/dom-hooks.ts"],"sourcesContent":["import { useCallback, useEffect, useImperativeHandle, type DependencyList, type Ref } from 'react';\r\n\r\nimport type { DOMImperativeFactory } from './dom.types';\r\nimport { REGISTER_DOM_IMPERATIVE_HANDLE_PROPS } from './injection';\r\n\r\n/**\r\n * A React `useImperativeHandle` like hook for DOM components.\r\n *\r\n */\r\nexport function useDOMImperativeHandle<T extends DOMImperativeFactory>(\r\n  ref: Ref<T>,\r\n  init: () => T,\r\n  deps?: DependencyList\r\n) {\r\n  // @ts-expect-error: Added via react-native-webview\r\n  const isTargetWeb = typeof window.ReactNativeWebView === 'undefined';\r\n\r\n  const stubHandlerFactory = useCallback(() => ({}) as T, deps ?? []);\r\n\r\n  // This standard useImperativeHandle hook is serving for web\r\n  useImperativeHandle(ref, isTargetWeb ? init : stubHandlerFactory, deps);\r\n\r\n  // This `globalThis._domRefProxy` is serving for native\r\n  useEffect(() => {\r\n    if (!isTargetWeb) {\r\n      globalThis._domRefProxy = init();\r\n      // @ts-expect-error: Added via react-native-webview\r\n      window.ReactNativeWebView.postMessage(\r\n        JSON.stringify({\r\n          type: REGISTER_DOM_IMPERATIVE_HANDLE_PROPS,\r\n          data: Object.keys(globalThis._domRefProxy),\r\n        })\r\n      );\r\n    }\r\n    return () => {\r\n      if (!isTargetWeb) {\r\n        globalThis._domRefProxy = undefined;\r\n      }\r\n    };\r\n  }, deps);\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,mBAAmB,QAAuC,OAAO;AAGlG,SAASC,oCAAoC,QAAQ,aAAa;AAMlE,OAAO,SAASC,sBAAsBA,CACpCC,GAAW,EACXC,IAAa,EACbC,IAAqB,EACrB;EAEA,MAAMC,WAAW,GAAG,OAAOC,MAAM,CAACC,kBAAkB,KAAK,WAAW;EAEpE,MAAMC,kBAAkB,GAAGX,WAAW,CAAC,OAAO,CAAC,CAAC,CAAM,EAAEO,IAAI,IAAI,EAAE,CAAC;EAGnEL,mBAAmB,CAACG,GAAG,EAAEG,WAAW,GAAGF,IAAI,GAAGK,kBAAkB,EAAEJ,IAAI,CAAC;EAGvEN,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,WAAW,EAAE;MAChBI,UAAU,CAACC,YAAY,GAAGP,IAAI,CAAC,CAAC;MAEhCG,MAAM,CAACC,kBAAkB,CAACI,WAAW,CACnCC,IAAI,CAACC,SAAS,CAAC;QACbC,IAAI,EAAEd,oCAAoC;QAC1Ce,IAAI,EAAEC,MAAM,CAACC,IAAI,CAACR,UAAU,CAACC,YAAY;MAC3C,CAAC,CACH,CAAC;IACH;IACA,OAAO,MAAM;MACX,IAAI,CAACL,WAAW,EAAE;QAChBI,UAAU,CAACC,YAAY,GAAGQ,SAAS;MACrC;IACF,CAAC;EACH,CAAC,EAAEd,IAAI,CAAC;AACV","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}