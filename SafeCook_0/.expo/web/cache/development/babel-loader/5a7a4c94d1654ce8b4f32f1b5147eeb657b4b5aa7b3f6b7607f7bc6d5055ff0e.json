{"ast":null,"code":"'use client';\n\nvar _jsxFileName = \"C:\\\\Users\\\\chauv\\\\Desktop\\\\holberton-demoday\\\\Safe-Cook\\\\SafeCook_0\\\\node_modules\\\\@expo\\\\metro-runtime\\\\src\\\\error-overlay\\\\overlay\\\\LogBoxInspectorSourceMapStatus.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LogBoxInspectorSourceMapStatus(props) {\n  const [state, setState] = useState({\n    animation: null,\n    rotate: null\n  });\n  useEffect(() => {\n    if (props.status === 'PENDING') {\n      if (state.animation == null) {\n        const animated = new Animated.Value(0);\n        const animation = Animated.loop(Animated.timing(animated, {\n          duration: 2000,\n          easing: Easing.linear,\n          toValue: 1,\n          useNativeDriver: true\n        }));\n        setState({\n          animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg']\n          })\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null\n        });\n      }\n    }\n    return () => {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n  let image;\n  let color;\n  switch (props.status) {\n    case 'FAILED':\n      image = require('@expo/metro-runtime/assets/alert-triangle.png');\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case 'PENDING':\n      image = require('@expo/metro-runtime/assets/loader.png');\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n  if (props.status === 'COMPLETE' || image == null) {\n    return null;\n  }\n  return _jsxDEV(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getBackgroundColor(1)\n    },\n    hitSlop: {\n      bottom: 8,\n      left: 8,\n      right: 8,\n      top: 8\n    },\n    onPress: props.onPress,\n    style: styles.root,\n    children: [_jsxDEV(Animated.Image, {\n      source: image,\n      tintColor: color ?? LogBoxStyle.getTextColor(0.4),\n      style: [styles.image, state.rotate == null || props.status !== 'PENDING' ? null : {\n        transform: [{\n          rotate: state.rotate\n        }]\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: [styles.text, {\n        color\n      }],\n      children: \"Source Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});","map":{"version":3,"names":["_jsxFileName","React","useEffect","useState","Animated","Easing","StyleSheet","Text","LogBoxButton","LogBoxStyle","jsxDEV","_jsxDEV","LogBoxInspectorSourceMapStatus","props","state","setState","animation","rotate","status","animated","Value","loop","timing","duration","easing","linear","toValue","useNativeDriver","interpolate","inputRange","outputRange","start","stop","image","color","require","getErrorColor","getWarningColor","backgroundColor","default","pressed","getBackgroundColor","hitSlop","bottom","left","right","top","onPress","style","styles","root","children","Image","source","tintColor","getTextColor","transform","fileName","lineNumber","columnNumber","text","create","alignItems","borderRadius","flexDirection","height","paddingHorizontal","width","marginEnd","fontSize","includeFontPadding","lineHeight"],"sources":["C:/Users/chauv/Desktop/holberton-demoday/Safe-Cook/SafeCook_0/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorSourceMapStatus.tsx"],"sourcesContent":["/**\r\n * Copyright (c) 650 Industries.\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Animated, Easing, StyleSheet, Text } from 'react-native';\r\nimport type { GestureResponderEvent } from 'react-native';\r\n\r\nimport { LogBoxButton } from '../UI/LogBoxButton';\r\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\r\n\r\ntype Props = {\r\n  onPress?: ((event: GestureResponderEvent) => void) | null;\r\n  status: 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING';\r\n};\r\n\r\nexport function LogBoxInspectorSourceMapStatus(props: Props) {\r\n  const [state, setState] = useState<{\r\n    animation: null | Animated.CompositeAnimation;\r\n    rotate: null | Animated.AnimatedInterpolation<string>;\r\n  }>({\r\n    animation: null,\r\n    rotate: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.status === 'PENDING') {\r\n      if (state.animation == null) {\r\n        const animated = new Animated.Value(0);\r\n        const animation = Animated.loop(\r\n          Animated.timing(animated, {\r\n            duration: 2000,\r\n            easing: Easing.linear,\r\n            toValue: 1,\r\n            useNativeDriver: true,\r\n          })\r\n        );\r\n        setState({\r\n          animation,\r\n          rotate: animated.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: ['0deg', '360deg'],\r\n          }),\r\n        });\r\n        animation.start();\r\n      }\r\n    } else {\r\n      if (state.animation != null) {\r\n        state.animation.stop();\r\n        setState({\r\n          animation: null,\r\n          rotate: null,\r\n        });\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (state.animation != null) {\r\n        state.animation.stop();\r\n      }\r\n    };\r\n  }, [props.status, state.animation]);\r\n\r\n  let image;\r\n  let color;\r\n  switch (props.status) {\r\n    case 'FAILED':\r\n      image = require('@expo/metro-runtime/assets/alert-triangle.png');\r\n      color = LogBoxStyle.getErrorColor(1);\r\n      break;\r\n    case 'PENDING':\r\n      image = require('@expo/metro-runtime/assets/loader.png');\r\n      color = LogBoxStyle.getWarningColor(1);\r\n      break;\r\n  }\r\n\r\n  if (props.status === 'COMPLETE' || image == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <LogBoxButton\r\n      backgroundColor={{\r\n        default: 'transparent',\r\n        pressed: LogBoxStyle.getBackgroundColor(1),\r\n      }}\r\n      hitSlop={{ bottom: 8, left: 8, right: 8, top: 8 }}\r\n      onPress={props.onPress}\r\n      style={styles.root}>\r\n      <Animated.Image\r\n        source={image}\r\n        tintColor={color ?? LogBoxStyle.getTextColor(0.4)}\r\n        style={[\r\n          styles.image,\r\n          state.rotate == null || props.status !== 'PENDING'\r\n            ? null\r\n            : { transform: [{ rotate: state.rotate }] },\r\n        ]}\r\n      />\r\n      <Text style={[styles.text, { color }]}>Source Map</Text>\r\n    </LogBoxButton>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    borderRadius: 12,\r\n    flexDirection: 'row',\r\n    height: 24,\r\n    paddingHorizontal: 8,\r\n  },\r\n  image: {\r\n    height: 14,\r\n    width: 16,\r\n    marginEnd: 4,\r\n  },\r\n  text: {\r\n    fontSize: 12,\r\n    includeFontPadding: false,\r\n    lineHeight: 16,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}